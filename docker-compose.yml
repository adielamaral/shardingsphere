version: '3.8'
services:
  app1:
    build: .
    container_name: app1
    ports:
      - '8080:8080'
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    networks:
      - app-network
    depends_on:
      mysql_ds0:
        condition: service_healthy
      mysql_ds1:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "http://localhost:8080/actuator/health" ]
      interval: 30s
      timeout: 3s
      retries: 3
  app2:
    build: .
    container_name: app2
    ports:
      - '8081:8080'
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    networks:
      - app-network
    depends_on:
      mysql_ds0:
        condition: service_healthy
      mysql_ds1:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "http://localhost:8080/actuator/health" ]
      interval: 30s
      timeout: 3s
      retries: 3
  app3:
    build: .
    container_name: app3
    ports:
      - '8082:8080'
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    networks:
      - app-network
    depends_on:
      mysql_ds0:
        condition: service_healthy
      mysql_ds1:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "http://localhost:8080/actuator/health" ]
      interval: 30s
      timeout: 3s
      retries: 3
  app4:
    build: .
    container_name: app4
    ports:
      - '8083:8080'
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    networks:
      - app-network
    depends_on:
      mysql_ds0:
        condition: service_healthy
      mysql_ds1:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "http://localhost:8080/actuator/health" ]
      interval: 30s
      timeout: 3s
      retries: 3

  nginx:
    image: 'nginx:latest'
    container_name: nginx
    ports:
      - '80:80'
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf:ro'
    depends_on:
      - app1
      - app2
      - app3
      - app4
    networks:
      - app-network

  mysql_ds0:
    image: mysql:8.0
    container_name: mysql_ds0
    ports:
      - '3306:3306'
    environment:
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=admin
      - MYSQL_DATABASE=ds0
      - MYSQL_ROOT_PASSWORD=admin
    volumes:
      - mysql_data_0:/var/lib/mysql
      - './nginx.conf.d:/etc/mysql/nginx.conf.d'
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-u", "root", "-padmin" ]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql_ds1:
    image: mysql:8.0
    container_name: mysql_ds1
    ports:
      - '3307:3306'
    environment:
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=admin
      - MYSQL_DATABASE=ds1
      - MYSQL_ROOT_PASSWORD=admin
    volumes:
      - mysql_data_1:/var/lib/mysql
      - './nginx.conf.d:/etc/mysql/nginx.conf.d'
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-u", "root", "-padmin" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data_0:
  mysql_data_1: